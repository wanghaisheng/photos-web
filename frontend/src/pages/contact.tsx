import type { NextPage } from "next";
import Head from "next/head";
import Header from "../components/header";
import { Footer } from "../components/footer";
import Layout from "../components/layout";
import InputField from "../components/input-field";
import Submit from "../components/submit";
import { useForm, SubmitHandler } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { contactSchema } from "../schemas/contact";

type FormValues = {
  firstName: string;
  lastName: string;
  email: string;
  subject: string;
  message: string;
};

const Home: NextPage = () => {
  const {
    register,
    formState: { errors },
    handleSubmit,
  } = useForm<FormValues>({
    resolver: zodResolver(contactSchema),
  });
  const onSubmit: SubmitHandler<FormValues> = (data) => console.log(data);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      <Layout as="main">
        <form
          className="flex flex-col space-y-[25px] max-w-[500px]"
          onSubmit={handleSubmit(onSubmit)}
        >
          <h1 className="text-2xl">Contact</h1>
          <div className="flex space-x-3">
            <InputField
              label="First Name"
              error={errors["firstName"]?.message}
              required
              {...register("firstName", { required: true })}
            />
            <InputField
              label="Last Name"
              error={errors["lastName"]?.message}
              required
              {...register("lastName", { required: true })}
            />
          </div>
          <InputField
            label="Email Address"
            error={errors["email"]?.message}
            type="email"
            required
            {...register("email", { required: true })}
          />
          <InputField
            label="Subject"
            error={errors["subject"]?.message}
            required
            {...register("subject", { required: true })}
          />
          <InputField
            label="Message"
            error={errors["message"]?.message}
            textarea
            required
            {...register("message", { required: true })}
          />
          <Submit className="ml-auto text-sm py-2">Submit</Submit>
        </form>
      </Layout>
      <Footer />
    </>
  );
};

export default Home;
